/**********************************************************************
*																																			*
*		Файл параметров для АБ 72НВ-40 ЖЦПИ.563532.011 зав. № ________		*
*																																			*
***********************************************************************/

#ifndef PARAMETERS_B3001001_H
#define PARAMETERS_B3001001_H
 
//#define nMaxReadADC			3000			// Максимальное количество чтений АЦП для одного канала
//#define nWrkReadADC			3000			// Количество чтений АЦП для одного канала в штатом режиме
//#define nChanlADCd			2					// Число рабочих каналов АЦП. 2,3 - для датчиков; 4,5 - АЭ
//#define nDatch					10				// Число датчиков (5+5)
#define nDatchD					5					// Число датчиков давления
#define nDatchT					5					// Число датчиков температуры

//#define nMaxBadAE				5					// Число вышедших из строя АЭ, при котором АБ ещё "живёт"
//#define nMaxBadDatchD		2					// Число вышедших из строя ДД, при котором АБ ещё "живёт"
//#define nMaxBadDatchT		2					// Число вышедших из строя ДТ, при котором АБ ещё "живёт"

//#define lockPMaxDatchD	50				// Максимальное давление для ДД (для автономного управление)
//#define lockPMinDatchD	10				// Минимальное давление для ДД (для автономного управление)

//#define PMaxDatchD			65				// Максимальное давление для ДД (для автономного управление)
//#define PMinDatchD			0					// Минимальное давление для ДД (для автономного управление)

//#define TMaxDatchT			45				// Максимальная температура для ДТ
//#define TMinDatchT			20				// Минимальная температура для ДТ

//**************************************************************************************************
const int	kodADC_t25[3]	= {1700, 1870, 1908};

const float	dTempC[3]	= {4.0, -24.0, -29.0};		// (Грд Цельс) дельта датчика температуры МК

const float kdelta	= 0.05;											// Допустимый диапазон разброса ошибки 5% от диапазона измерений

			float	AUcc[3]	= {3.269, 3.360, 3.266};		// (В) Опорное напряжение АЦП МУК1, МУК2, МУК3
const float	Uref[3]	= {2.986, 3.031, 3.019};		// (В) Прецизионное напряжение АЦП МУК1, МУК2, МУК3 на PD0

// .............................................................................................................................
// *** М И Б *******************************************************************************************************************

const int nCorrectAE 	 = 4;											// Числ пропусков ложного значения напряжений АЭ
const int koefZadergAE = 4;											// Коэфф задержки после коммутации дешифр АЭ (koefZadergAE*40000)

const float kTempAE[3]	= {0.0002, 0.00025, 0.0000};	// Температурная коррекция АЭ

const float kTempAB[3]	= {0.0045, 0.0045, 0.002};		// Температурная коррекция АБ было до 16.01

//float minUAE = 0.6;															// (В) Нижняя граница значения рабочего напряжения АЭ
//float maxUAE = 2.0;															// (В) Верхняя граница значения рабочего напряжения АЭ

//													 1		 2			3			 4			5			 6			7			 8			9			10
const float	kAE_[2][72]	={
//													{ 1.0, 1.0,		1.0, 1.0,   1.0, 1.0,   1.0, 1.0,		1.0, 1.0,		1.0, 1.0,
//													  1.0, 1.0,		1.0, 1.0,   1.0, 1.0,   1.0, 1.0,		1.0, 1.0,		1.0, 1.0,
//													  1.0, 1.0,		1.0, 1.0,   1.0, 1.0,   1.0, 1.0,		1.0, 1.0,		1.0, 1.0,
//														1.0, 1.0,		1.0, 1.0,   1.0, 1.0,   1.0, 1.0,		1.0, 1.0,		1.0, 1.0,
//													  1.0, 1.0,		1.0, 1.0,   1.0, 1.0,   1.0, 1.0,		1.0, 1.0,		1.0, 1.0,
//														1.0, 1.0,		1.0, 1.0,   1.0, 1.0,   1.0, 1.0,		1.0, 1.0,		1.0, 1.0 },
													{ 0.888299,1.028707,0.897692,1.030052, 2.412627,2.199419, 0.937552,1.024134,0.925110,1.023271,
														0.892665,1.028105,0.881196,1.012657,0.923185,1.038243,0.864045,1.042462,0.884760,0.989565,
														0.865896,1.028105,0.907557,1.071462,0.867816,1.059436,0.912823,1.018074,0.899152,1.021281,
														0.927483,1.024134,0.923348,1.008400,0.899480,1.083345,0.907176,1.061527,0.934307,1.050097,
														0.931759,1.008830,0.933744,1.021281,0.884102,1.083345,0.912822,1.056792,0.886809,1.081120,
														0.898618,1.048434,0.868871,1.073550,0.899705,1.096322,0.879794,1.069583,0.902071,1.076269,
														0.872201,1.044304,0.873423,1.052654,0.902213,1.070020,0.873379,1.059649,0.886449,1.061974,0.911043,0.989724},
					// ...................................................................................................
//															 1			 2				3				 4				5				 6				7				 8				9				10
													{ 0.996568,1.052259,0.969094,1.079662, 2.412627,2.199419 ,0.973679,1.056565,0.972819,1.086791,
													  0.978891,1.052259,0.974401,1.074695,0.957306,1.062748,0.990370,1.072255,0.971237,1.057331,
													  0.985746,1.065285,0.970670,1.055274,0.979731,1.057027,0.983451,1.058429,0.966968,1.084676,
													  0.976627,1.078638,0.974692,1.084676,0.952023,1.057027,0.954254,1.065926,0.965670,1.086791,
													  0.956713,1.121699,0.959648,1.074695,0.950082,1.057027,0.939681,1.078638,0.969094,1.069773,
													  0.948121,1.078638,0.967518,1.081767,0.925749,1.061597,0.948121,1.069699,0.968261,1.089737,
													  0.954550,1.078638,0.961730,1.084676,0.946473,1.067979,0.958886,1.077432,0.966694,1.089737,0.965789,1.047987 }};

//														1	 				 2				3					4					5				 6				7				 8				9					10
const float	dAE_[2][72]	={
													{ 0.113235, -0.039594,0.080487,-0.047609,0.025855,-0.017654, 0.050921,-0.031828,0.039644,-0.045436,
														0.064718,-0.033033,0.095877,-0.022859,0.051511,-0.056078,0.120065,-0.048309,0.087184,-0.013358,
														0.114289,-0.031835,0.074586,-0.089233,0.104742,-0.073921,0.058172,-0.023457,0.064009,-0.041673,
														0.058590,-0.032828,0.053036,-0.028173,0.087864,-0.113842,0.085718,-0.096393,0.057369,-0.083429,
														0.074253,-0.028183,0.056331,-0.050409,0.116947,-0.117476,0.104508,-0.100503,0.113442,-0.142176,
														0.107944,-0.071595,0.143968,-0.117450,0.116643,-0.138592,0.116416,-0.112959,0.095283,-0.108178,
														0.120800,-0.060284,0.130839,-0.078740,0.081714,-0.101561,0.126399,-0.086666,0.091020,-0.090754,0.074424,-0.045085 },
					// .................................................................................................
//														1	 				 2					3					4					5					 6			7			 8			9			10
					/* МУК2 */			{-0.025769,-0.012321, 0.005402,-0.037794,0.025855,-0.017654,-0.007606, 0.000410,-0.004015,-0.046494,
													 -0.016499, 0.006168,-0.005514,-0.033731, 0.014259,-0.009229,-0.032882,-0.026922,-0.004516,-0.004570,
													 -0.026762,-0.014588,-0.000978,-0.005390,-0.015724,-0.004570,-0.022528,-0.000081, 0.003530,-0.042531,
													 -0.009945,-0.025362,-0.005790,-0.043531, 0.028123,-0.003570, 0.020400,-0.033492, 0.014838,-0.047494,
													  0.024452,-0.103989, 0.023624,-0.042172, 0.038025,-0.025786, 0.049051,-0.043314, 0.011288,-0.043170,
													  0.038014,-0.046683, 0.008412,-0.052242, 0.067939,-0.017554, 0.024192,-0.039294, 0.010186,-0.048697,
													  0.020169,-0.050421, 0.014673,-0.043531, 0.034491,-0.025166, 0.013452,-0.032122, 0.007313,-0.049697,0.004348,-0.052060 }};												// (В) Дельта

//													{ 0.00, 0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,
//													  0.00, 0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,
//													  0.00, 0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,
//					/* МУК1 */			  0.00, 0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,
//													  0.00, 0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,
//													  0.00, 0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,
//													  0.00, 0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00,  0.00, 0.00 }};

// .............................................................................................................................
const float kUop[2]	=	{4.325, 4.325};						// Коэфф масштаб для измеренного опорного (аппаратного) напряжения

float cUsm[3][2] =  {{1.349, 1.349},						// (В) Измеренное напряжение средней точкой (смещение) для МУКов
									 	 {1.349, 1.349},
										 {1.349, 1.349}};
float Uop[2] = {1.981, 1.996};									// (В) Измеренное опорное напряжение

float t_Usm[2]	=	{1.364, 1.36};								// (В) Измеренное напряжение средней точкой (смещение) для отладки
float t_Uop[2]	=	{2.006, 1.992};

const float	Usm_hrd	=  1.36;										// (В) Аппаратное напряжение средней точкой (смещения)

const float Unal_AE[3][2] = {{2.599, 2.190},
														 {2.488, 2.249},
														 {0.00, 0.00}};			// Коэффициенты коррекции каналов АЦП для АЭ для МУК1, МУК2.

//const float K_AE[3][2] = {{1.093, 0.99},
//													{1.07, 1.05},
//													{0.00, 0.00}};			// Коэффициенты коррекции каналов АЦП для АЭ

float Usm[2] =  {1.349, 1.349};									// (В) Измеренное напряжение средней точкой (смещение)

float TUsm[2];																	// (В) Измеренное напряжение средней точкой (смещение) для отладки
float TUop[2];																	// (В) Измеренное опорное напряжение для отладки
//
volatile float NumIzmAE[nDatchD]	= {6, 7, 16, 59, 66};	// 7, 8, 17, 60, 67 - Номера измерительных АЭ (ДД, ДТ) 


// .............................................................................................................................
// *** П С Д *******************************************************************************************************************

const int nCorrectDD = 2;												// Числ пропусков ложного значения напряжений датчиков ДАВЛЕНИЯ
const int nCorrectDT = 2;												// Числ пропусков ложного значения напряжений датчиков ТЕЧПЕРАТУРЫ

const int koefZadergDat = 2;										// Коэфф задержки после коммутации дешифр датчиков (koefZadergDat*40000)

const float	KuGndP[3]	= {1.0, 1.0, 1.0};
const float	KuGndT[3]	= {1.0, 1.0, 1.0};
const float	KuOpornP[3]	= {1.0, 1.0, 1.0};
const float	KuOpornT[3]	= {1.0, 1.0, 1.0};

const float	KuAB1[3]	= {64.25182, 65.09695, 64.95056};		//
const float	DuAB1[3]	= {-0.169068, -0.085494, 0.009307};

const float	K2uAB1[3]	= {0.13393, 0.263102, 0.13168};
const float	DuAB2[3]	= {-0.117645, 0.176091, -0.019952};


//const float	KuAB2[3]	= {64.25182, 65.21636, 65.01065};
//const float	K2uAB2[3]	= {0.13393, 0.16346, 0.23409};

const float	KuAB2[3]	= {61.217391, 61.217391, 65.01065};		//	61.754386, 61.217391, 65.01065
const float	K2uAB2[3]	= {0.521739, 0.521739, 0.23409};			//	-0.042105, 0.521739, 0.23409

//const float	KuAB1[3]	= {61.5, 63, 0};				// Коэфф подбираются при отладке модулей (МУК1, МУК2). Используется для выч U АБ
//const float	KuAB2[3]	= {61.5, 63, 0};				// Коэфф подбираются при отладке модулей (МУК1, МУК2). Используется для выч U АБ

// ------------------------------- Датчики давления:
const float	MinUdatchD = 0.15;															 
const float	MaxUdatchD = 3.0;

float ItarD[nDatchD]	= {0.001967,  0.001970,  0.001973, 0.001966, 0.001978};		// (A) Ток опроса датчиков ДД в БЭ
float IpasD[nDatchD]	= {0.0020,  0.0020,  0.0020, 0.0020, 0.0020};							// (A) Ток опроса датчиков ДД в БЭ

const float	kDD[3][nDatchD]		= {{0.059694,0.059449,0.059537,0.059666,0.059698},
																 {0.060493,0.060403,0.060491,0.060463,0.060584},
																 {0.059805,0.059816,0.059826,0.059674,0.059972}};						// Коэффициенты масштабирования датч давления
																 //{1.0, 1.0, 1.0, 1.0, 1.0}};

const float	dDD[3][nDatchD]		= {{-0.000213,0.000257,-0.000385,0.000518,-0.000468},
																 { 0.000302,0.000400,-0.000156,0.000611,-0.000095},
																 { 0.005254,0.004812,0.004666,0.005041,0.004628}};	// Дельта датч давления
															   //{0.0, 0.0, 0.0, 0.0, 0.0}};

//const float	kDD[3][nDatchD]		= {{0.059694,0.059449,0.059537,0.059666,0.059698},
//																 {0.060493,0.060403,0.060491,0.060463,0.060584},
//																 {0.058157,0.058014,0.058070,0.058072,0.058099}};						// Коэффициенты масштабирования датч давления
//															 //{1.0, 1.0, 1.0, 1.0, 1.0}};

//const float	dDD[3][nDatchD]		= {{-0.000213,0.000257,-0.000385,0.000518,-0.000468},
//																 { 0.000302,0.000400,-0.000156,0.000611,-0.000095},
//																 { 0.004692,0.005087, 0.004252,0.005147, 0.004448}};	// Дельта датч давления
//															 //{0.0, 0.0, 0.0, 0.0, 0.0}};

float a0[3][nDatchD]				  =	{{1.1784,	1.1784, 1.1784, 1.1784, 1.1784},
														  	 {1.1784,	1.1784, 1.1784, 1.1784, 1.1784},
	 													  	 {1.1784,	1.1784, 1.1784, 1.1784, 1.1784}};

float a1[3][nDatchD]				  = {{0.4732, 0.4732, 0.4732, 0.4732, 0.4732},
	 													  	 {0.4732, 0.4732, 0.4732, 0.4732, 0.4732},
	 													  	 {0.4732, 0.4732, 0.4732, 0.4732, 0.4732}};

float a2[3][nDatchD]				  =	{{0.0002, 0.0002, 0.0002, 0.0002, 0.0002},
	 													  	 {0.0002, 0.0002, 0.0002, 0.0002, 0.0002},
	 													  	 {0.0002, 0.0002, 0.0002, 0.0002, 0.0002}};
																 

// ------------------------------- Датчики температуры:
const float	MinUdatchT = 0.005;															 
const float	MaxUdatchT = 3.18;
	
const float	kTemp[3][5]	= {0.000005,0.000005,0.000005,0.000005,0.000005,
													 0.000005,0.000005,0.000005,0.000005,0.000005,
													 0.000012,0.000014,0.000013,0.000014,0.000014};

//const int	kodADC_t25[3]	= {1700, 1870, 1870};
const float beginDiap = 0.384;
																 
float ItarT[nDatchT]	= {0.003982, 0.003987, 0.003991, 0.003968, 0.003990};			// (A) Ток опроса датчиков ДД в БЭ
float IpasT[nDatchT]	= {0.00399, 0.003993, 0.0039975, 0.0039725, 0.003996};		// (A) Ток опроса датчиков ДД в БЭ

float R0[nDatchT]			= {99.94, 99.94, 99.94, 99.94, 99.94};										// (ом) Сопротивление датчика при t = 0°C (по паспорту);
float R100[nDatchT]		= {99.94, 99.94, 99.94, 99.94, 99.94};										// (ом) Сопротивление датчика при t = 100°C (по паспорту);
												 
float alpha[nDatchT]	= {0.004149, 0.004149, 0.004149, 0.004149, 0.004149};			// Температурный коэффициент по паспорту.

const float	kDT[3][nDatchT]	= {{0.043627,0.043633,0.043714,0.043622,0.043743},
															 {0.044971,0.044910,0.044990,0.044882,0.044929},
															 //{1.0, 1.0, 1.0, 1.0, 1.0}};
															 {0.043425,0.043253,0.043246,0.043284,0.043317}};				// Коэффициенты масштабирования датч температуры

const float	dDT[3][nDatchD]	= {{0.378723,0.379599,0.379301,0.378424,0.377902},
															 {0.380151,0.380685,0.380467,0.380421,0.380215},
															 //{0.0, 0.0, 0.0, 0.0, 0.0}};
															 {0.384623,0.385405,0.385274,0.385136,0.384730}};						// Дельта датч темпертуры

const float	dKT[3][nDatchD]	= {{ 0.00,   0.00,  0.000,  0.00,  0.00},
															 {-0.018, -0.02, -0.018, -0.019, -0.02},
															 { 0.0245, 0.024, 0.0245, 0.025,  0.024}};						// Коэфф динамической дельты датч темпертуры

//========== коррекция первой уставки ====================================================================
const float	LimUadc[3][nDatchD]	= {{ 1.1, 1.1, 1.1, 1.1, 1.1},
																		{1.1, 1.1, 1.1, 1.1, 1.1},
																		{1.1, 1.1, 1.1, 1.1, 1.1}};						// Коэфф динамической дельты датч темпертуры

const float	kLimUadc[3][nDatchD]	= {{0.0012, 0.0006, 0.0012, 0.0006, 0.0008},
																	 	 {0.0037, 0.0032, 0.0037, 0.0031, 0.0032},
																		 {0.0038, 0.0034, 0.0035, 0.0031, 0.0032}};						// Коэфф динамической дельты датч темпертуры

const float	kLimUadcT[3][nDatchD]	= {{0.000005, 0.000005, 0.000005, 0.000005, 0.000005},
	                                   {0.000005, 0.000005, 0.000005, 0.000005, 0.000005},                      // Коэфф динамической дельты датч темпертуры для 1 уставки 
																		 {0.0, 0.000005, 0.000005, 0.000005, 0.000005}};																			 
//========== коррекция пятой уставки ====================================================================
const float	LimUadc_5[3][nDatchD]	= {{ 0.0, 0.0, 0.0, 0.0, 0.0},
																			{0.0, 0.0, 0.0, 0.0, 0.0},
																			{0.0, 0.0, 0.0, 0.0, 0.0}};

const float	kLimUadc_5[3][nDatchD]	= {{0.0, 0.0, 0.0, 0.0, 0.0},
																			{ 0.0, 0.0, 0.0, 0.0, 0.0},
																			{ 0.0, 0.0, 0.0, 0.0, 0.0}};						// Коэфф динамической дельты датч темпертуры

const float	kLimUadc_5_T[3][nDatchD]	= {{0.0, 0.0, 0.0, 0.0, 0.0},
																			{ 0.0, 0.0, 0.0, 0.0, 0.0},
																			{ 0.0, 0.0, 0.0, 0.0, 0.0}};						// Коэф динамической дельты датч темпертуры для 5 уставки


// ################################################################################################
#endif
// end of parameters.h
